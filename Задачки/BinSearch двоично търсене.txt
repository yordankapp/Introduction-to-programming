Метод на двоичното търсене:

1. Ако редицата е празна, съобщаваме, че няма такъв елемент, и търсенето се
преустановява;
2. Намира се “средния” елемент на редицата – такъв, че броят на елементите вляво
от него се отличава от броя на елементите вдясно от него най-много с 1;
3. Ако средният елемент има търсената стойност, съобщаваме, че е намерен
елемент, и търсенето се преустановява;
4. Ако търсената стойност е по-малка от средния елемент, търсенето продължава в
лявата подредица;
5. Ако търсената стойност е по-голяма от средния елемент, търсенето продължава
в дясната подредица.



#include<iostream>
using namespace std;
const int MAX=100;

bool BinSearch(const int arr[], int n, int x)
{
    int l=0, r=n-1;
    int m;
    while(l<=r)
    {
        m=(l+r)/2;
        if(x==m)
            return 1;
        if(x<arr[m])
            r=m-1;
        else l=m+1;
    }
      return 0;
}


int main()
{
    int n,x, arr[MAX];// масивът приемаме, че е вече сортиран
    cout<<"Elements in array= ";
    cin>>n;
    cout<<"Search for element= ";
    cin>>x;
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    cout<<BinSearch(arr,n, x);
    return 0;
}
